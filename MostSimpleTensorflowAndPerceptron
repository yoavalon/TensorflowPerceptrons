import tensorflow as tf

#training dataset

T, F = 1., -1.
train_x = [
 [T, T],
 [T, F],
 [F, T],
 [F, F],
]
train_y = [
 [T],
 [F],
 [F],
 [F],
]
#Model Variable

w1 = tf.Variable(tf.random_normal([2, 2]))
out1 = tf.tanh(tf.matmul(train_x, w1)) #activator

error = tf.subtract(train_y, out1)
cost = tf.reduce_mean(tf.square(error))

optimizer = tf.train.GradientDescentOptimizer(0.01).minimize(cost)

#session 

with tf.Session() as sess : 
    tf.global_variables_initializer().run()

    err, target = 1, 0.01
    epoch, max_epochs = 0, 5000
    while err > target and epoch < max_epochs:
         epoch += 1
         err, _ = sess.run([cost, optimizer])
         print(f'epoch: {epoch} mse: {err}')
        
    print(sess.run(w1))    
